[
  {
    "ContainingType": "Store4.PIs.Controllers.AcountsController",
    "Method": "GetCurrentUserAddress",
    "RelativePath": "api/Acounts/Address",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Store4.Core.Dtos.Auth.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.AcountsController",
    "Method": "GetCurrentUser",
    "RelativePath": "api/Acounts/CurrentUser",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Store4.Core.Dtos.Auth.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.AcountsController",
    "Method": "LoginIn",
    "RelativePath": "api/Acounts/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "Store4.Core.Dtos.Auth.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Store4.Core.Dtos.Auth.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.AcountsController",
    "Method": "Register",
    "RelativePath": "api/Acounts/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "RregisterDto",
        "Type": "Store4.Core.Dtos.Auth.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Store4.Core.Dtos.Auth.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.AcountsController",
    "Method": "UpdateCurrentUserAddress",
    "RelativePath": "api/Acounts/Update",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Store4.Core.Dtos.Auth.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.AcountsController",
    "Method": "UpdateCurrentUserAddress",
    "RelativePath": "api/Acounts/Update",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addressDto",
        "Type": "Store4.Core.Dtos.Auth.AddressDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Store4.Core.Dtos.Auth.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.BasketController",
    "Method": "GetBasket",
    "RelativePath": "api/Basket",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Store4.Core.Entities.CoustomerBasket",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.BasketController",
    "Method": "CreateUpDateBasketAsync",
    "RelativePath": "api/Basket",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Store4.Core.Dtos.Basket.CoustomerBasketDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Store4.Core.Entities.CoustomerBasket",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.BasketController",
    "Method": "DeleteBasketAsync",
    "RelativePath": "api/Basket",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.BuggyController",
    "Method": "GetBadRequest",
    "RelativePath": "api/Buggy/BadRequest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Store4.PIs.Controllers.BuggyController",
    "Method": "GetBadRequest",
    "RelativePath": "api/Buggy/BadRequest/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Store4.PIs.Controllers.BuggyController",
    "Method": "GetNotFoundRequest",
    "RelativePath": "api/Buggy/notfound",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Store4.PIs.Controllers.BuggyController",
    "Method": "GetServerError",
    "RelativePath": "api/Buggy/ServerError",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Store4.PIs.Controllers.BuggyController",
    "Method": "GetUnauthorized",
    "RelativePath": "api/Buggy/Unauthorized/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Store4.PIs.Controllers.OrdersController",
    "Method": "CreteOrder",
    "RelativePath": "api/Orders",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Store4.Core.Dtos.Orders.OrderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Store4.PIs.Controllers.OrdersController",
    "Method": "GetOrderForSpecificUser",
    "RelativePath": "api/Orders",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Store4.PIs.Controllers.OrdersController",
    "Method": "GetOrderByIdForSpecificUser",
    "RelativePath": "api/Orders/{Orderid}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Orderid",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Store4.PIs.Controllers.OrdersController",
    "Method": "GetDeliveryMethods",
    "RelativePath": "api/Orders/DeliveryMethods",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Store4.PIs.Controllers.PaymentsController",
    "Method": "CratePaymentIntent",
    "RelativePath": "api/Payments/{basketId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "basketId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Store4.PIs.Controllers.PaymentsController",
    "Method": "WebHook",
    "RelativePath": "api/Payments/webhook",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Store4.PIs.Controllers.ProductController",
    "Method": "GetAllProducts",
    "RelativePath": "api/Product",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Search",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Sort",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "BrandId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "TypeId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageindex",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Store4.Core.Helper.PaginationResponse\u00601[[Store4.Core.Dtos.Products.ProductDto, Store4.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.ProductController",
    "Method": "GetallBrans",
    "RelativePath": "api/Product/Brands",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Store4.Core.Dtos.Products.TypeBrandDto, Store4.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.ProductController",
    "Method": "GetProductsById",
    "RelativePath": "api/Product/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Store4.Core.Dtos.Products.ProductDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Store4.PIs.Errors.ApiErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Store4.PIs.Errors.ApiErrorResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.ProductController",
    "Method": "Getalltypes",
    "RelativePath": "api/Product/types",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Store4.Core.Dtos.Products.TypeBrandDto, Store4.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Store4.PIs.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Store4.PIs.WeatherForecast, Store4.PIs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]